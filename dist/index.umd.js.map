{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["export type updateType = 'init' | 'scroll' | 'resize' | 'heightChange'\n\nexport interface Memory {\n  prevPosition: number | null\n}\n\nexport interface UpdateParams {\n  position: number\n  prevPosition: number\n  hasUpdated: boolean\n  updateType: updateType\n  hasScroll: boolean\n  lastUpdated: number\n}\n\nexport interface PositionIndicatorInstance {\n  init: () => void\n  destroy: () => void\n}\n\nexport interface Options {\n  onInit: (data: UpdateParams) => {} | void\n  onUpdate: (data: UpdateParams) => {} | void\n}\n\ninterface Events {\n  onScroll?: () => void\n  onResize?: () => void\n  onHeightChange?: () => void\n  resizeObserver?: ResizeObserver\n}\n\nlet _getFullDocumentHeight = () =>\n  Math.max(document.body.scrollHeight, document.documentElement.scrollHeight)\n\nlet _getViewPortHeight = () => window.innerHeight\n\nlet _getScrollYPosition = () => window.pageYOffset\n\nlet _hasScroll = () => _getFullDocumentHeight() > _getViewPortHeight()\n\nlet _clamp = (value: number, min: number, max: number) =>\n  Math.min(Math.max(value, min), max)\n\nlet _onUpdate = (updateType: updateType, memory: Memory): UpdateParams => {\n  let fullDocumentHeight = _getFullDocumentHeight()\n  let viewPortHeight = _getViewPortHeight()\n  let scrollYPosition = _getScrollYPosition()\n\n  let relative = fullDocumentHeight - viewPortHeight\n  let position = _clamp(scrollYPosition / (relative || 1), 0, 1)\n  let prevPosition = memory.prevPosition\n  memory.prevPosition = position\n  return {\n    position,\n    prevPosition,\n    hasUpdated: position !== prevPosition,\n    updateType,\n    hasScroll: _hasScroll(),\n    lastUpdated: Date.now(),\n  }\n}\n\nlet _init = (\n  { onInit: initCallback, onUpdate: updateCallback }: Options,\n  events: Events,\n  memory: Memory\n) => {\n  events.onScroll = () => {\n    if (updateCallback) {\n      updateCallback(_onUpdate('scroll', memory))\n    }\n  }\n  events.onResize = () => {\n    if (updateCallback) {\n      updateCallback(_onUpdate('resize', memory))\n    }\n  }\n  events.onHeightChange = () => {\n    if (updateCallback) {\n      updateCallback(_onUpdate('heightChange', memory))\n    }\n  }\n\n  /**\n   * Throttling for event is not used.\n   * Because it has the same effect same as rAF.\n   * https://stackoverflow.com/a/44779316/815507\n   */\n  window.addEventListener('scroll', events.onScroll)\n  window.addEventListener('resize', events.onResize)\n\n  if (typeof ResizeObserver !== 'undefined') {\n    events.resizeObserver = new ResizeObserver(events.onHeightChange)\n    events.resizeObserver.observe(document.body)\n  }\n\n  initCallback && initCallback(_onUpdate('init', memory))\n}\n\nlet _destroy = (events: Events) => {\n  events.onScroll && window.removeEventListener('scroll', events.onScroll)\n  events.onResize && window.removeEventListener('resize', events.onResize)\n  events.resizeObserver && events.resizeObserver.unobserve(document.body)\n}\n\nexport const createPositionIndicator = (\n  options: Options\n): PositionIndicatorInstance => {\n  let events: Events = {\n    onScroll: null,\n    onResize: null,\n    onHeightChange: null,\n    resizeObserver: null,\n  }\n  let memory: Memory = {\n    prevPosition: null,\n  }\n\n  return {\n    init: () => _init(options, events, memory),\n    destroy: () => {\n      _destroy(events)\n      events = {}\n      memory = {\n        prevPosition: null,\n      }\n    },\n  }\n}\n"],"names":[],"mappings":"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"}