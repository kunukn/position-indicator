/*!
 * position-indicator v0.0.1
 * (c) kunukn
 * Released under the MIT License.
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).positionIndicator={})}(this,(function(e){"use strict";var n=function(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},o=function(){return window.innerHeight},t=function(){return window.pageYOffset},i=function(){return n()>o()},r=function(e){var r,s,u,l=n(),c=o(),d=t();return{position:(r=d/(l-c||1),s=0,u=1,Math.min(Math.max(r,s),u)),updateType:e,hasScroll:i(),lastUpdated:Date.now()}};e.createPositionIndicator=function(e){var s={onScroll:null,onResize:null,onHeightChange:null,resizeObserver:null};return{hasScroll:function(){return i()},getFullDocumentHeight:function(){return n()},getViewPortHeight:function(){return o()},getScrollYPosition:function(){return t()},init:function(){return function(e,n){var o=e.onInit,t=e.onUpdate;n.onScroll=function(){t&&t(r("scroll"))},n.onResize=function(){t&&t(r("resize"))},n.onHeightChange=function(){t&&t(r("heightChange"))},window.addEventListener("scroll",n.onScroll),window.addEventListener("resize",n.onResize),"undefined"!=typeof ResizeObserver&&(n.resizeObserver=new ResizeObserver(n.onHeightChange),n.resizeObserver.observe(document.body)),o&&o(r("init"))}(e,s)},destroy:function(){!function(e){e.onScroll&&window.removeEventListener("scroll",e.onScroll),e.onResize&&window.removeEventListener("resize",e.onResize),e.resizeObserver&&e.resizeObserver.unobserve(document.body)}(s),s={}}}},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.min.js.map
